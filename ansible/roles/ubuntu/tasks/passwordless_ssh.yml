---
- hosts: all
  become: yes
  become_method: sudo

  vars:
     local_pub_key: "{{ lookup('file', '~/.ssh/id_rsa.pub') }}"
     username: "{{ ansible_user }}"

  tasks:

    - name: Fail if no SSH public key is found locally
      fail:
        msg: "No SSH public key found under '~/.ssh/id_rsa.pub', unable to continue"
      when: local_pub_key is undefined

    - name: Copy local public key to remote host
      authorized_key:
        user: "{{ username }}"
        state: present
        key: "{{ local_pub_key }}"

    - name: Enable RSAAuthentication in sshd_config
      lineinfile:
        dest: /etc/ssh/sshd_config
        backup: yes
        owner: root
        group: root
        mode: 644
        line: 'RSAAuthentication yes'
        regexp: '^(#)?RSAAuthentication (no|yes)$'
        state: present

    - name: Enable PubkeyAuthentication in sshd_config
      lineinfile:
        dest: /etc/ssh/sshd_config
        backup: yes
        owner: root
        group: root
        mode: 644
        line: 'PubkeyAuthentication yes'
        regexp: '^(#)?PubkeyAuthentication (no|yes)$'
        state: present

#    - name: Disable ChallengeResponseAuthentication in sshd_config
#      lineinfile:
#        dest: /etc/ssh/sshd_config
#        backup: yes
#        owner: root
#        group: root
#        mode: 644
#        line: 'ChallengeResponseAuthentication no'
#        regexp: '^(#)?ChallengeResponseAuthentication (no|yes)$'
#        state: present
#
#    - name: Disable PasswordAuthentication in sshd_config
#      lineinfile:
#        dest: /etc/ssh/sshd_config
#        backup: yes
#        owner: root
#        group: root
#        mode: 644
#        line: 'PasswordAuthentication no'
#        regexp: '^(#)?PasswordAuthentication (no|yes)$'
#        state: present
#
#    - name: Disable UsePAM in sshd_config
#      lineinfile:
#        dest: /etc/ssh/sshd_config
#        backup: yes
#        owner: root
#        group: root
#        mode: 644
#        line: 'UsePAM no'
#        regexp: '^(#)?UsePAM (no|yes)$'
#        state: present
#
#    - name: Restart sshd
#      service:
#        name: 'ssh'
#        state: 'restarted'

